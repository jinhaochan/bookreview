{"ast":null,"code":"var _jsxFileName = \"/home/user/bookreview/src/search.js\";\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nexport default class SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        const filteredResults = _.reduce(source, (memo, data, name) => {\n          const results = _.filter(data.results, isMatch);\n\n          if (results.length) memo[name] = {\n            name,\n            results\n          }; // eslint-disable-line no-param-reassign\n\n          return memo;\n        }, {});\n\n        this.setState({\n          isLoading: false,\n          results: filteredResults\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      category: true,\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, JSON.stringify(this.state, null, 2)), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Options\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, JSON.stringify(source, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/home/user/bookreview/src/search.js"],"names":["faker","React","Component","Search","Grid","Header","Segment","SearchBar","state","initialState","handleResultSelect","e","result","setState","value","title","handleSearchChange","isLoading","setTimeout","length","re","RegExp","_","escapeRegExp","isMatch","test","filteredResults","reduce","source","memo","data","name","results","filter","render","debounce","leading","props","overflowX","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,OAA/B,QAA8C,mBAA9C;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CM,KAD+C,GACvCC,YADuC;;AAAA,SAG/CC,kBAH+C,GAG1B,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAmB,KAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG;AAAhB,KAAd,CAHO;;AAAA,SAK/CC,kBAL+C,GAK1B,CAACL,CAAD,EAAI;AAAEG,MAAAA;AAAF,KAAJ,KAAkB;AACrC,WAAKD,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAE,IAAb;AAAmBH,QAAAA;AAAnB,OAAd;AAEAI,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAKV,KAAL,CAAWM,KAAX,CAAiBK,MAAjB,GAA0B,CAA9B,EAAiC,OAAO,KAAKN,QAAL,CAAcJ,YAAd,CAAP;AAEjC,cAAMW,EAAE,GAAG,IAAIC,MAAJ,CAAWC,CAAC,CAACC,YAAF,CAAe,KAAKf,KAAL,CAAWM,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,cAAMU,OAAO,GAAIZ,MAAD,IAAYQ,EAAE,CAACK,IAAH,CAAQb,MAAM,CAACG,KAAf,CAA5B;;AAEA,cAAMW,eAAe,GAAGJ,CAAC,CAACK,MAAF,CACtBC,MADsB,EAEtB,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AACpB,gBAAMC,OAAO,GAAGV,CAAC,CAACW,MAAF,CAASH,IAAI,CAACE,OAAd,EAAuBR,OAAvB,CAAhB;;AACA,cAAIQ,OAAO,CAACb,MAAZ,EAAoBU,IAAI,CAACE,IAAD,CAAJ,GAAa;AAAEA,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAb,CAFA,CAE+B;;AAEnD,iBAAOH,IAAP;AACD,SAPqB,EAQtB,EARsB,CAAxB;;AAWA,aAAKhB,QAAL,CAAc;AACZI,UAAAA,SAAS,EAAE,KADC;AAEZe,UAAAA,OAAO,EAAEN;AAFG,SAAd;AAID,OArBS,EAqBP,GArBO,CAAV;AAsBD,KA9B8C;AAAA;;AAgC/CQ,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAK1B,KADpC;AAAA,UACCS,SADD,eACCA,SADD;AAAA,UACYH,KADZ,eACYA,KADZ;AAAA,UACmBkB,OADnB,eACmBA,OADnB;AAGP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAEf,SAFX;AAGE,MAAA,cAAc,EAAE,KAAKP,kBAHvB;AAIE,MAAA,cAAc,EAAEY,CAAC,CAACa,QAAF,CAAW,KAAKnB,kBAAhB,EAAoC,GAApC,EAAyC;AACvDoB,QAAAA,OAAO,EAAE;AAD8C,OAAzC,CAJlB;AAOE,MAAA,OAAO,EAAEJ,OAPX;AAQE,MAAA,KAAK,EAAElB;AART,OASM,KAAKuB,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,EAcE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACC,SAAL,CAAe,KAAKhC,KAApB,EAA2B,IAA3B,EAAiC,CAAjC,CADH,CAFF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAK,MAAA,KAAK,EAAE;AAAE8B,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACC,SAAL,CAAeZ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CADH,CANF,CADF,CAdF,CADF;AA6BD;;AAhE8C","sourcesContent":["import faker from 'faker'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\n\r\nexport default class SearchBar extends Component {\r\n  state = initialState\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      const filteredResults = _.reduce(\r\n        source,\r\n        (memo, data, name) => {\r\n          const results = _.filter(data.results, isMatch)\r\n          if (results.length) memo[name] = { name, results } // eslint-disable-line no-param-reassign\r\n\r\n          return memo\r\n        },\r\n        {},\r\n      )\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: filteredResults,\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={8}>\r\n          <Search\r\n            category\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={8}>\r\n          <Segment>\r\n            <Header>State</Header>\r\n            <pre style={{ overflowX: 'auto' }}>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </pre>\r\n            <Header>Options</Header>\r\n            <pre style={{ overflowX: 'auto' }}>\r\n              {JSON.stringify(source, null, 2)}\r\n            </pre>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}