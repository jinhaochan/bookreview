{"ast":null,"code":"var _jsxFileName = \"/home/user/bookreview/src/search.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nconst getResults = () => _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  category: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$')\n}));\n\nconst source = _.range(0, 3).reduce(memo => {\n  const name = faker.hacker.noun(); // eslint-disable-next-line no-param-reassign\n\n  memo[name] = {\n    name,\n    results: getResults()\n  };\n  return memo;\n}, {});\n\nexport default class SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        const filteredResults = _.reduce(source, (memo, data, name) => {\n          const results = _.filter(data.results, isMatch);\n\n          if (results.length) memo[name] = {\n            name,\n            results\n          }; // eslint-disable-line no-param-reassign\n\n          return memo;\n        }, {});\n\n        this.setState({\n          isLoading: false,\n          results: filteredResults\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      category: true,\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/user/bookreview/src/search.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","getResults","times","title","company","companyName","description","catchPhrase","category","internet","avatar","price","finance","amount","source","range","reduce","memo","name","hacker","noun","SearchBar","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filteredResults","data","filter","render","debounce","leading","props"],"mappings":"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","sourcesContent":["import _ from 'lodash'\r\nimport faker from 'faker'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nconst getResults = () =>\r\n  _.times(5, () => ({\r\n    title: faker.company.companyName(),\r\n    description: faker.company.catchPhrase(),\r\n    category: faker.internet.avatar(),\r\n    price: faker.finance.amount(0, 100, 2, '$'),\r\n  }))\r\n\r\nconst source = _.range(0, 3).reduce((memo) => {\r\n  const name = faker.hacker.noun()\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  memo[name] = {\r\n    name,\r\n    results: getResults(),\r\n  }\r\n\r\n  return memo\r\n}, {})\r\n\r\nexport default class SearchBar extends Component {\r\n  state = initialState\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      const filteredResults = _.reduce(\r\n        source,\r\n        (memo, data, name) => {\r\n          const results = _.filter(data.results, isMatch)\r\n          if (results.length) memo[name] = { name, results } // eslint-disable-line no-param-reassign\r\n\r\n          return memo\r\n        },\r\n        {},\r\n      )\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: filteredResults,\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={8}>\r\n          <Search\r\n            category\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n          />\r\n        </Grid.Column>\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}